/* Automatically generated by Ferrum HDL. */

module top_module
(
    // Inputs
    input wire clk,
    input wire rst,
    // input wire en,
    input wire [3:0] data,
    // Outputs
    output wire [3:0] out0,
    output wire [3:0] out1,
    output wire [3:0] out2
);

    reg [3:0] dff0;
    initial begin
        dff0 = 4'd0;
    end
    always @(posedge clk or posedge rst) begin
        if (rst)
            dff0 <= 4'd0;
        else
            dff0 <= data;
    end
    
    assign out0 = dff0;

    reg [3:0] dff1;
    initial begin
        dff1 = 4'd0;
    end
    always @(posedge clk or posedge rst) begin
        if (rst)
            dff1 <= 4'd0;
        else
            dff1 <= dff0;
    end

    assign out1 = dff1;

    reg [3:0] dff2;
    initial begin
        dff2 = 4'd0;
    end
    always @(posedge clk or posedge rst) begin
        if (rst)
            dff2 <= 4'd0;
        else
            dff2 <= dff1;
    end

    assign out2 = dff2;

endmodule
